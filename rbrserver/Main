#include "StdInc.h"

CServer * g_pServer = NULL;

int main()
{
        // server core
        g_pServer = new CServer( );

        // Checking the server startup.
        if(!g_pServer || !g_pServer->Load( ))
        {
                CLog::Printf("[Error]  start CServer core!.");
                Sleep(3000);
                TerminateProcess ( GetCurrentProcess(), 0 );
                return 0;
        }

        CLog::Printf("==========================================================");
        CLog::Printf("= " PROJECT_STRING);
        CLog::Printf("= " VERSION_STRING);
        CLog::Printf("==========================================================");
        CLog::Printf("= Hostname    : %s", g_pServer->GetVarValue("hostname").Get());
        CLog::Printf("= Port        : %d", atoi(g_pServer->GetVarValue("port").Get()));
        CLog::Printf("= Max Players : %d", atoi(g_pServer->GetVarValue("maxplayers").Get()));
        CLog::Printf("= Query Port  : %d", atoi(g_pServer->GetVarValue("port").Get())+1);
        if ( g_pServer->GetVarValue("serverip").IsNotEmpty() )
        {
                CLog::Printf("= Server IP   : %s", g_pServer->GetVarValue("serverip").Get());
        }
        CLog::Printf("==========================================================");

        // resources
        g_pServer->GetResourceManager()->ParseConfig();
        
        // server started succesfull
        CLog::Printf("[Info] Server started succesfull!");

        // Loop While
        while ( true )
        {
                g_pServer->GetNetworkManager()->Process();
                
                Sleep(5);
        }

        // server core
        SAFE_DELETE(g_pServer);
        return 0;
}
